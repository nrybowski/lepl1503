_id: 5c90b1246779dd43dca95ff3
archive: 5c90b1276779dd43dca95ff4
courseid: LSINF1252
custom: {}
grade: 0.0
input:
    '@lang': en
    '@random': []
    '@state': ''
    '@username': fdeleval
    q1: |
        #include <stdio.h>
        #include <stdlib.h>
        #include <string.h>
        int eq(int a, int b)
        {
            if (a == b) return 0;
            return 1;

        }
        int ge(int a, int b)
        {
            if(a>=b) return 0;
            return 1;
        }
        int gt(int a, int b)
        {
            if(a>b) return 0;
            return 1;
        }
        int le(int a, int b)
        {
            if(a<=b) return 0;
            return 1;
        }
        int lt(int a, int b)
        {
            if(a<b) return 0;
            return 1;
        }
        int ne(int a, int b)
        {
           if(a!=b) return 0;
            return 1;
        }
        int main(int argc, char *argv[])
        {
            char *argument = argv[2];
            if (strcmp(argument, "eq") == 0) return eq(strtol(argv[1],NULL,0) ,strtol(argv[3],NULL,0));
            if (strcmp(argument, "ge") == 0) return ge(strtol(argv[1],NULL,0) ,strtol(argv[3],NULL,0));
            if (strcmp(argument, "gt") == 0) return gt(strtol(argv[1],NULL,0) ,strtol(argv[3],NULL,0));
            if (strcmp(argument, "le") == 0) return le(strtol(argv[1],NULL,0) ,strtol(argv[3],NULL,0));
            if (strcmp(argument, "lt") == 0) return lt(strtol(argv[1],NULL,0) ,strtol(argv[3],NULL,0));
            if (strcmp(argument, "ne") == 0) return ne(strtol(argv[1],NULL,0) ,strtol(argv[3],NULL,0));
        }
problems: {}
response_type: rst
result: failed
state: ''
status: done
stderr: ''
stdout: ''
submitted_on: 2019-03-19 10:06:44.981000
taskid: commandetest
tests: {}
text: 'Erreur: L''expression: ``1 -ne 1`` retourne ``191`` mais devrait retourner
    ``1``'
username:
- fdeleval
