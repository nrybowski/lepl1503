accessible: true
author: Gauthier Gheysens Anthony Doeraene
categories: []
contact_url: ''
context: |-
    Ecrivez une fonction qui supprime toutes les occurences d'une valeur dans une circular linked list et rends le nombre d'éléments supprimés.
    Veillez rendre la liste avec le même head que celui de base si possible!


    Par exemple:

        .. code-block:: c

            [1, 6, 4, 1, 1, 3, 2, 5, 1] en supprimant 1 donne [6, 4, 3, 2, 5 ]
            [56, 40, 1, 1, 30, 20, 10] en supprimant 1 donne [56, 40, 30, 20, 10]

    Vous avez accès aux structures suivantes:

        .. code-block:: c


            typedef struct node {
                int data;
                struct node *next;
            }node_t;

            typedef struct  list {
                struct node* head;
                struct node* last;
                int size;
            }list_t;
environment_id: cpp
environment_parameters:
    limits:
        time: '30'
        hard_time: ''
        memory: '100'
    run_cmd: ''
environment_type: docker
evaluate: best
file: ''
groups: false
input_random: 0
name: Suppression
network_grading: false
problems:
    delete:
        type: code
        name: Delete
        header: |4-
                .. code-block:: c

                    /*
                    *@pre liste != NULL
                    *@pre value : valeur à supprimer
                    *@post retourne le nombre d'élements supprimé
                    */
                    int deletevalue(list_t* liste, int value) {
        language: c
        default: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
